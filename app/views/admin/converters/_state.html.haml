.control-group
  = f.label :use_accept_state, :class => 'control-label'

  .controls
    = f.check_box :use_accept_state

.control-group
  = f.label :accept_state, :class => 'control-label'

  .controls
    = f.select(:accept_state, @states, { include_hidden: false }, { multiple: true, size: 3 })

.control-group
  = f.label :convert_state, :class => 'control-label'

  .controls
    = f.check_box :convert_state

.control-group
  = f.label :state, :class => 'control-label'

  .controls
    = f.select(:state, @states)

.control-group
  = f.label :convert_state_values, :class => 'control-label'

  .controls
    %span#add-state-value.btn.btn-small.btn-primary
      Add value  

    .row#state_values
      - if @converter[:convert_state_values].present?
        - @converter[:convert_state_values].each do |val|
          .span5
            = text_field_tag "converter[convert_state_values][]", val

            %span.btn.btn-small.btn-danger.remove_value
              Remove

.control-group
  = f.label :use_reject_state, :class => 'control-label'

  .controls
    = f.check_box :use_reject_state

.control-group
  = f.label :reject_state, :class => 'control-label'

  .controls
    = f.select(:reject_state, @states, { include_hidden: false }, { multiple: true, size: 3 })
